{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      setStoredValue(value);\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\n_s(useLocalStorage, \"F5wH+8zhXjdRUv9l1lQHoyk62+s=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/Users/ashishsolanki/Documents/GitHub/editor.io/src/Hooks/LocalStorage.js"],"names":["useState","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","localStorage","getItem","JSON","parse","setValue","value","setItem","stringify","err","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AACpD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACF,YAAMM,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAb;AACA,aAAOI,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAH,GAAsBH,YAAjC;AACD,KAHD,CAGE,MAAM;AACN,aAAOA,YAAP;AACD;AACF,GAP6C,CAA9C;;AASA,QAAMQ,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAI;AACFP,MAAAA,cAAc,CAACO,KAAD,CAAd;AACAL,MAAAA,YAAY,CAACM,OAAb,CAAqBX,GAArB,EAA0BO,IAAI,CAACK,SAAL,CAAeF,KAAf,CAA1B;AACD,KAHD,CAGE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAPD;;AASA,SAAO,CAACX,WAAD,EAAcO,QAAd,CAAP;AACD,CApBM;;GAAMV,e;;AAsBb,eAAeA,eAAf","sourcesContent":["import { useState } from \"react\";\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      setStoredValue(value);\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}