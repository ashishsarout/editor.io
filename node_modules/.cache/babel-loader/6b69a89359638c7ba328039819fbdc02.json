{"ast":null,"code":"const buttonSelectors = ['[data-md-button]', 'md-header', 'md-bold', 'md-italic', 'md-quote', 'md-code', 'md-link', 'md-image', 'md-unordered-list', 'md-ordered-list', 'md-task-list', 'md-mention', 'md-ref', 'md-strikethrough'];\n\nfunction getButtons(toolbar) {\n  const els = [];\n\n  for (const button of toolbar.querySelectorAll(buttonSelectors.join(', '))) {\n    if (button.hidden || button.offsetWidth <= 0 && button.offsetHeight <= 0) continue;\n    if (button.closest('markdown-toolbar') === toolbar) els.push(button);\n  }\n\n  return els;\n}\n\nfunction keydown(fn) {\n  return function (event) {\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      fn(event);\n    }\n  };\n}\n\nconst styles = new WeakMap();\n\nclass MarkdownButtonElement extends HTMLElement {\n  constructor() {\n    super();\n\n    const apply = () => {\n      const style = styles.get(this);\n      if (!style) return;\n      applyStyle(this, style);\n    };\n\n    this.addEventListener('keydown', keydown(apply));\n    this.addEventListener('click', apply);\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'button');\n    }\n  }\n\n  click() {\n    const style = styles.get(this);\n    if (!style) return;\n    applyStyle(this, style);\n  }\n\n}\n\nclass MarkdownHeaderButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    const level = parseInt(this.getAttribute('level') || '3', 10);\n\n    if (level < 1 || level > 6) {\n      return;\n    }\n\n    const prefix = `${'#'.repeat(level)} `;\n    styles.set(this, {\n      prefix\n    });\n  }\n\n}\n\nif (!window.customElements.get('md-header')) {\n  window.MarkdownHeaderButtonElement = MarkdownHeaderButtonElement;\n  window.customElements.define('md-header', MarkdownHeaderButtonElement);\n}\n\nclass MarkdownBoldButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '**',\n      suffix: '**',\n      trimFirst: true\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('hotkey', 'b');\n  }\n\n}\n\nif (!window.customElements.get('md-bold')) {\n  window.MarkdownBoldButtonElement = MarkdownBoldButtonElement;\n  window.customElements.define('md-bold', MarkdownBoldButtonElement);\n}\n\nclass MarkdownItalicButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '_',\n      suffix: '_',\n      trimFirst: true\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('hotkey', 'i');\n  }\n\n}\n\nif (!window.customElements.get('md-italic')) {\n  window.MarkdownItalicButtonElement = MarkdownItalicButtonElement;\n  window.customElements.define('md-italic', MarkdownItalicButtonElement);\n}\n\nclass MarkdownQuoteButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '> ',\n      multiline: true,\n      surroundWithNewlines: true\n    });\n  }\n\n}\n\nif (!window.customElements.get('md-quote')) {\n  window.MarkdownQuoteButtonElement = MarkdownQuoteButtonElement;\n  window.customElements.define('md-quote', MarkdownQuoteButtonElement);\n}\n\nclass MarkdownCodeButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '`',\n      suffix: '`',\n      blockPrefix: '```',\n      blockSuffix: '```'\n    });\n  }\n\n}\n\nif (!window.customElements.get('md-code')) {\n  window.MarkdownCodeButtonElement = MarkdownCodeButtonElement;\n  window.customElements.define('md-code', MarkdownCodeButtonElement);\n}\n\nclass MarkdownLinkButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '[',\n      suffix: '](url)',\n      replaceNext: 'url',\n      scanFor: 'https?://'\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('hotkey', 'k');\n  }\n\n}\n\nif (!window.customElements.get('md-link')) {\n  window.MarkdownLinkButtonElement = MarkdownLinkButtonElement;\n  window.customElements.define('md-link', MarkdownLinkButtonElement);\n}\n\nclass MarkdownImageButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '![',\n      suffix: '](url)',\n      replaceNext: 'url',\n      scanFor: 'https?://'\n    });\n  }\n\n}\n\nif (!window.customElements.get('md-image')) {\n  window.MarkdownImageButtonElement = MarkdownImageButtonElement;\n  window.customElements.define('md-image', MarkdownImageButtonElement);\n}\n\nclass MarkdownUnorderedListButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '- ',\n      multiline: true,\n      surroundWithNewlines: true\n    });\n  }\n\n}\n\nif (!window.customElements.get('md-unordered-list')) {\n  window.MarkdownUnorderedListButtonElement = MarkdownUnorderedListButtonElement;\n  window.customElements.define('md-unordered-list', MarkdownUnorderedListButtonElement);\n}\n\nclass MarkdownOrderedListButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '1. ',\n      multiline: true,\n      orderedList: true\n    });\n  }\n\n}\n\nif (!window.customElements.get('md-ordered-list')) {\n  window.MarkdownOrderedListButtonElement = MarkdownOrderedListButtonElement;\n  window.customElements.define('md-ordered-list', MarkdownOrderedListButtonElement);\n}\n\nclass MarkdownTaskListButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '- [ ] ',\n      multiline: true,\n      surroundWithNewlines: true\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('hotkey', 'L');\n  }\n\n}\n\nif (!window.customElements.get('md-task-list')) {\n  window.MarkdownTaskListButtonElement = MarkdownTaskListButtonElement;\n  window.customElements.define('md-task-list', MarkdownTaskListButtonElement);\n}\n\nclass MarkdownMentionButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '@',\n      prefixSpace: true\n    });\n  }\n\n}\n\nif (!window.customElements.get('md-mention')) {\n  window.MarkdownMentionButtonElement = MarkdownMentionButtonElement;\n  window.customElements.define('md-mention', MarkdownMentionButtonElement);\n}\n\nclass MarkdownRefButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '#',\n      prefixSpace: true\n    });\n  }\n\n}\n\nif (!window.customElements.get('md-ref')) {\n  window.MarkdownRefButtonElement = MarkdownRefButtonElement;\n  window.customElements.define('md-ref', MarkdownRefButtonElement);\n}\n\nclass MarkdownStrikethroughButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '~~',\n      suffix: '~~',\n      trimFirst: true\n    });\n  }\n\n}\n\nif (!window.customElements.get('md-strikethrough')) {\n  window.MarkdownStrikethroughButtonElement = MarkdownStrikethroughButtonElement;\n  window.customElements.define('md-strikethrough', MarkdownStrikethroughButtonElement);\n}\n\nconst modifierKey = navigator.userAgent.match(/Macintosh/) ? 'Meta' : 'Control';\n\nclass MarkdownToolbarElement extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'toolbar');\n    }\n\n    this.addEventListener('keydown', focusKeydown);\n    const fn = shortcut.bind(null, this);\n\n    if (this.field) {\n      this.field.addEventListener('keydown', fn);\n      shortcutListeners.set(this, fn);\n    }\n\n    this.setAttribute('tabindex', '0');\n    this.addEventListener('focus', onToolbarFocus, {\n      once: true\n    });\n  }\n\n  disconnectedCallback() {\n    const fn = shortcutListeners.get(this);\n\n    if (fn && this.field) {\n      this.field.removeEventListener('keydown', fn);\n      shortcutListeners.delete(this);\n    }\n\n    this.removeEventListener('keydown', focusKeydown);\n  }\n\n  get field() {\n    const id = this.getAttribute('for');\n    if (!id) return null;\n    const root = 'getRootNode' in this ? this.getRootNode() : document;\n    let field;\n\n    if (root instanceof Document || root instanceof ShadowRoot) {\n      field = root.getElementById(id);\n    }\n\n    return field instanceof HTMLTextAreaElement ? field : null;\n  }\n\n}\n\nfunction onToolbarFocus({\n  target\n}) {\n  if (!(target instanceof Element)) return;\n  target.removeAttribute('tabindex');\n  let tabindex = '0';\n\n  for (const button of getButtons(target)) {\n    button.setAttribute('tabindex', tabindex);\n\n    if (tabindex === '0') {\n      button.focus();\n      tabindex = '-1';\n    }\n  }\n}\n\nfunction focusKeydown(event) {\n  const key = event.key;\n  if (key !== 'ArrowRight' && key !== 'ArrowLeft' && key !== 'Home' && key !== 'End') return;\n  const toolbar = event.currentTarget;\n  if (!(toolbar instanceof HTMLElement)) return;\n  const buttons = getButtons(toolbar);\n  const index = buttons.indexOf(event.target);\n  const length = buttons.length;\n  if (index === -1) return;\n  let n = 0;\n  if (key === 'ArrowLeft') n = index - 1;\n  if (key === 'ArrowRight') n = index + 1;\n  if (key === 'End') n = length - 1;\n  if (n < 0) n = length - 1;\n  if (n > length - 1) n = 0;\n\n  for (let i = 0; i < length; i += 1) {\n    buttons[i].setAttribute('tabindex', i === n ? '0' : '-1');\n  }\n\n  event.preventDefault();\n  buttons[n].focus();\n}\n\nconst shortcutListeners = new WeakMap();\n\nfunction findHotkey(toolbar, key) {\n  for (const el of toolbar.querySelectorAll('[hotkey]')) {\n    if (el.getAttribute('hotkey') === key) {\n      return el;\n    }\n  }\n\n  return null;\n}\n\nfunction shortcut(toolbar, event) {\n  if (event.metaKey && modifierKey === 'Meta' || event.ctrlKey && modifierKey === 'Control') {\n    const button = findHotkey(toolbar, event.key);\n\n    if (button) {\n      button.click();\n      event.preventDefault();\n    }\n  }\n}\n\nif (!window.customElements.get('markdown-toolbar')) {\n  window.MarkdownToolbarElement = MarkdownToolbarElement;\n  window.customElements.define('markdown-toolbar', MarkdownToolbarElement);\n}\n\nfunction isMultipleLines(string) {\n  return string.trim().split('\\n').length > 1;\n}\n\nfunction repeat(string, n) {\n  return Array(n + 1).join(string);\n}\n\nfunction wordSelectionStart(text, i) {\n  let index = i;\n\n  while (text[index] && text[index - 1] != null && !text[index - 1].match(/\\s/)) {\n    index--;\n  }\n\n  return index;\n}\n\nfunction wordSelectionEnd(text, i, multiline) {\n  let index = i;\n  const breakpoint = multiline ? /\\n/ : /\\s/;\n\n  while (text[index] && !text[index].match(breakpoint)) {\n    index++;\n  }\n\n  return index;\n}\n\nlet canInsertText = null;\n\nfunction insertText(textarea, {\n  text,\n  selectionStart,\n  selectionEnd\n}) {\n  const originalSelectionStart = textarea.selectionStart;\n  const before = textarea.value.slice(0, originalSelectionStart);\n  const after = textarea.value.slice(textarea.selectionEnd);\n\n  if (canInsertText === null || canInsertText === true) {\n    textarea.contentEditable = 'true';\n\n    try {\n      canInsertText = document.execCommand('insertText', false, text);\n    } catch (error) {\n      canInsertText = false;\n    }\n\n    textarea.contentEditable = 'false';\n  }\n\n  if (canInsertText && !textarea.value.slice(0, textarea.selectionStart).endsWith(text)) {\n    canInsertText = false;\n  }\n\n  if (!canInsertText) {\n    try {\n      document.execCommand('ms-beginUndoUnit');\n    } catch (e) {}\n\n    textarea.value = before + text + after;\n\n    try {\n      document.execCommand('ms-endUndoUnit');\n    } catch (e) {}\n\n    textarea.dispatchEvent(new CustomEvent('input', {\n      bubbles: true,\n      cancelable: true\n    }));\n  }\n\n  if (selectionStart != null && selectionEnd != null) {\n    textarea.setSelectionRange(selectionStart, selectionEnd);\n  } else {\n    textarea.setSelectionRange(originalSelectionStart, textarea.selectionEnd);\n  }\n}\n\nfunction styleSelectedText(textarea, styleArgs) {\n  const text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let result;\n\n  if (styleArgs.orderedList) {\n    result = orderedList(textarea);\n  } else if (styleArgs.multiline && isMultipleLines(text)) {\n    result = multilineStyle(textarea, styleArgs);\n  } else {\n    result = blockStyle(textarea, styleArgs);\n  }\n\n  insertText(textarea, result);\n}\n\nfunction expandSelectedText(textarea, prefixToUse, suffixToUse, multiline = false) {\n  if (textarea.selectionStart === textarea.selectionEnd) {\n    textarea.selectionStart = wordSelectionStart(textarea.value, textarea.selectionStart);\n    textarea.selectionEnd = wordSelectionEnd(textarea.value, textarea.selectionEnd, multiline);\n  } else {\n    const expandedSelectionStart = textarea.selectionStart - prefixToUse.length;\n    const expandedSelectionEnd = textarea.selectionEnd + suffixToUse.length;\n    const beginsWithPrefix = textarea.value.slice(expandedSelectionStart, textarea.selectionStart) === prefixToUse;\n    const endsWithSuffix = textarea.value.slice(textarea.selectionEnd, expandedSelectionEnd) === suffixToUse;\n\n    if (beginsWithPrefix && endsWithSuffix) {\n      textarea.selectionStart = expandedSelectionStart;\n      textarea.selectionEnd = expandedSelectionEnd;\n    }\n  }\n\n  return textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n}\n\nfunction newlinesToSurroundSelectedText(textarea) {\n  const beforeSelection = textarea.value.slice(0, textarea.selectionStart);\n  const afterSelection = textarea.value.slice(textarea.selectionEnd);\n  const breaksBefore = beforeSelection.match(/\\n*$/);\n  const breaksAfter = afterSelection.match(/^\\n*/);\n  const newlinesBeforeSelection = breaksBefore ? breaksBefore[0].length : 0;\n  const newlinesAfterSelection = breaksAfter ? breaksAfter[0].length : 0;\n  let newlinesToAppend;\n  let newlinesToPrepend;\n\n  if (beforeSelection.match(/\\S/) && newlinesBeforeSelection < 2) {\n    newlinesToAppend = repeat('\\n', 2 - newlinesBeforeSelection);\n  }\n\n  if (afterSelection.match(/\\S/) && newlinesAfterSelection < 2) {\n    newlinesToPrepend = repeat('\\n', 2 - newlinesAfterSelection);\n  }\n\n  if (newlinesToAppend == null) {\n    newlinesToAppend = '';\n  }\n\n  if (newlinesToPrepend == null) {\n    newlinesToPrepend = '';\n  }\n\n  return {\n    newlinesToAppend,\n    newlinesToPrepend\n  };\n}\n\nfunction blockStyle(textarea, arg) {\n  let newlinesToAppend;\n  let newlinesToPrepend;\n  const {\n    prefix,\n    suffix,\n    blockPrefix,\n    blockSuffix,\n    replaceNext,\n    prefixSpace,\n    scanFor,\n    surroundWithNewlines\n  } = arg;\n  const originalSelectionStart = textarea.selectionStart;\n  const originalSelectionEnd = textarea.selectionEnd;\n  let selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let prefixToUse = isMultipleLines(selectedText) && blockPrefix.length > 0 ? `${blockPrefix}\\n` : prefix;\n  let suffixToUse = isMultipleLines(selectedText) && blockSuffix.length > 0 ? `\\n${blockSuffix}` : suffix;\n\n  if (prefixSpace) {\n    const beforeSelection = textarea.value[textarea.selectionStart - 1];\n\n    if (textarea.selectionStart !== 0 && beforeSelection != null && !beforeSelection.match(/\\s/)) {\n      prefixToUse = ` ${prefixToUse}`;\n    }\n  }\n\n  selectedText = expandSelectedText(textarea, prefixToUse, suffixToUse, arg.multiline);\n  let selectionStart = textarea.selectionStart;\n  let selectionEnd = textarea.selectionEnd;\n  const hasReplaceNext = replaceNext.length > 0 && suffixToUse.indexOf(replaceNext) > -1 && selectedText.length > 0;\n\n  if (surroundWithNewlines) {\n    const ref = newlinesToSurroundSelectedText(textarea);\n    newlinesToAppend = ref.newlinesToAppend;\n    newlinesToPrepend = ref.newlinesToPrepend;\n    prefixToUse = newlinesToAppend + prefix;\n    suffixToUse += newlinesToPrepend;\n  }\n\n  if (selectedText.startsWith(prefixToUse) && selectedText.endsWith(suffixToUse)) {\n    const replacementText = selectedText.slice(prefixToUse.length, selectedText.length - suffixToUse.length);\n\n    if (originalSelectionStart === originalSelectionEnd) {\n      let position = originalSelectionStart - prefixToUse.length;\n      position = Math.max(position, selectionStart);\n      position = Math.min(position, selectionStart + replacementText.length);\n      selectionStart = selectionEnd = position;\n    } else {\n      selectionEnd = selectionStart + replacementText.length;\n    }\n\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  } else if (!hasReplaceNext) {\n    let replacementText = prefixToUse + selectedText + suffixToUse;\n    selectionStart = originalSelectionStart + prefixToUse.length;\n    selectionEnd = originalSelectionEnd + prefixToUse.length;\n    const whitespaceEdges = selectedText.match(/^\\s*|\\s*$/g);\n\n    if (arg.trimFirst && whitespaceEdges) {\n      const leadingWhitespace = whitespaceEdges[0] || '';\n      const trailingWhitespace = whitespaceEdges[1] || '';\n      replacementText = leadingWhitespace + prefixToUse + selectedText.trim() + suffixToUse + trailingWhitespace;\n      selectionStart += leadingWhitespace.length;\n      selectionEnd -= trailingWhitespace.length;\n    }\n\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  } else if (scanFor.length > 0 && selectedText.match(scanFor)) {\n    suffixToUse = suffixToUse.replace(replaceNext, selectedText);\n    const replacementText = prefixToUse + suffixToUse;\n    selectionStart = selectionEnd = selectionStart + prefixToUse.length;\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  } else {\n    const replacementText = prefixToUse + selectedText + suffixToUse;\n    selectionStart = selectionStart + prefixToUse.length + selectedText.length + suffixToUse.indexOf(replaceNext);\n    selectionEnd = selectionStart + replaceNext.length;\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  }\n}\n\nfunction multilineStyle(textarea, arg) {\n  const {\n    prefix,\n    suffix,\n    surroundWithNewlines\n  } = arg;\n  let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let selectionStart = textarea.selectionStart;\n  let selectionEnd = textarea.selectionEnd;\n  const lines = text.split('\\n');\n  const undoStyle = lines.every(line => line.startsWith(prefix) && line.endsWith(suffix));\n\n  if (undoStyle) {\n    text = lines.map(line => line.slice(prefix.length, line.length - suffix.length)).join('\\n');\n    selectionEnd = selectionStart + text.length;\n  } else {\n    text = lines.map(line => prefix + line + suffix).join('\\n');\n\n    if (surroundWithNewlines) {\n      const {\n        newlinesToAppend,\n        newlinesToPrepend\n      } = newlinesToSurroundSelectedText(textarea);\n      selectionStart += newlinesToAppend.length;\n      selectionEnd = selectionStart + text.length;\n      text = newlinesToAppend + text + newlinesToPrepend;\n    }\n  }\n\n  return {\n    text,\n    selectionStart,\n    selectionEnd\n  };\n}\n\nfunction orderedList(textarea) {\n  const orderedListRegex = /^\\d+\\.\\s+/;\n  const noInitialSelection = textarea.selectionStart === textarea.selectionEnd;\n  let selectionEnd;\n  let selectionStart;\n  let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let textToUnstyle = text;\n  let lines = text.split('\\n');\n  let startOfLine, endOfLine;\n\n  if (noInitialSelection) {\n    const linesBefore = textarea.value.slice(0, textarea.selectionStart).split(/\\n/);\n    startOfLine = textarea.selectionStart - linesBefore[linesBefore.length - 1].length;\n    endOfLine = wordSelectionEnd(textarea.value, textarea.selectionStart, true);\n    textToUnstyle = textarea.value.slice(startOfLine, endOfLine);\n  }\n\n  const linesToUnstyle = textToUnstyle.split('\\n');\n  const undoStyling = linesToUnstyle.every(line => orderedListRegex.test(line));\n\n  if (undoStyling) {\n    lines = linesToUnstyle.map(line => line.replace(orderedListRegex, ''));\n    text = lines.join('\\n');\n\n    if (noInitialSelection && startOfLine && endOfLine) {\n      const lengthDiff = linesToUnstyle[0].length - lines[0].length;\n      selectionStart = selectionEnd = textarea.selectionStart - lengthDiff;\n      textarea.selectionStart = startOfLine;\n      textarea.selectionEnd = endOfLine;\n    }\n  } else {\n    lines = numberedLines(lines);\n    text = lines.join('\\n');\n    const {\n      newlinesToAppend,\n      newlinesToPrepend\n    } = newlinesToSurroundSelectedText(textarea);\n    selectionStart = textarea.selectionStart + newlinesToAppend.length;\n    selectionEnd = selectionStart + text.length;\n    if (noInitialSelection) selectionStart = selectionEnd;\n    text = newlinesToAppend + text + newlinesToPrepend;\n  }\n\n  return {\n    text,\n    selectionStart,\n    selectionEnd\n  };\n}\n\nfunction numberedLines(lines) {\n  let i;\n  let len;\n  let index;\n  const results = [];\n\n  for (index = i = 0, len = lines.length; i < len; index = ++i) {\n    const line = lines[index];\n    results.push(`${index + 1}. ${line}`);\n  }\n\n  return results;\n}\n\nfunction applyStyle(button, stylesToApply) {\n  const toolbar = button.closest('markdown-toolbar');\n  if (!(toolbar instanceof MarkdownToolbarElement)) return;\n  const defaults = {\n    prefix: '',\n    suffix: '',\n    blockPrefix: '',\n    blockSuffix: '',\n    multiline: false,\n    replaceNext: '',\n    prefixSpace: false,\n    scanFor: '',\n    surroundWithNewlines: false,\n    orderedList: false,\n    trimFirst: false\n  };\n  const style = Object.assign(Object.assign({}, defaults), stylesToApply);\n  const field = toolbar.field;\n\n  if (field) {\n    field.focus();\n    styleSelectedText(field, style);\n  }\n}\n\nexport default MarkdownToolbarElement;","map":{"version":3,"sources":["/Users/ashishsolanki/Documents/GitHub/editor.io/node_modules/@github/markdown-toolbar-element/dist/index.js"],"names":["buttonSelectors","getButtons","toolbar","els","button","querySelectorAll","join","hidden","offsetWidth","offsetHeight","closest","push","keydown","fn","event","key","preventDefault","styles","WeakMap","MarkdownButtonElement","HTMLElement","constructor","apply","style","get","applyStyle","addEventListener","connectedCallback","hasAttribute","setAttribute","click","MarkdownHeaderButtonElement","level","parseInt","getAttribute","prefix","repeat","set","window","customElements","define","MarkdownBoldButtonElement","suffix","trimFirst","MarkdownItalicButtonElement","MarkdownQuoteButtonElement","multiline","surroundWithNewlines","MarkdownCodeButtonElement","blockPrefix","blockSuffix","MarkdownLinkButtonElement","replaceNext","scanFor","MarkdownImageButtonElement","MarkdownUnorderedListButtonElement","MarkdownOrderedListButtonElement","orderedList","MarkdownTaskListButtonElement","MarkdownMentionButtonElement","prefixSpace","MarkdownRefButtonElement","MarkdownStrikethroughButtonElement","modifierKey","navigator","userAgent","match","MarkdownToolbarElement","focusKeydown","shortcut","bind","field","shortcutListeners","onToolbarFocus","once","disconnectedCallback","removeEventListener","delete","id","root","getRootNode","document","Document","ShadowRoot","getElementById","HTMLTextAreaElement","target","Element","removeAttribute","tabindex","focus","currentTarget","buttons","index","indexOf","length","n","i","findHotkey","el","metaKey","ctrlKey","isMultipleLines","string","trim","split","Array","wordSelectionStart","text","wordSelectionEnd","breakpoint","canInsertText","insertText","textarea","selectionStart","selectionEnd","originalSelectionStart","before","value","slice","after","contentEditable","execCommand","error","endsWith","e","dispatchEvent","CustomEvent","bubbles","cancelable","setSelectionRange","styleSelectedText","styleArgs","result","multilineStyle","blockStyle","expandSelectedText","prefixToUse","suffixToUse","expandedSelectionStart","expandedSelectionEnd","beginsWithPrefix","endsWithSuffix","newlinesToSurroundSelectedText","beforeSelection","afterSelection","breaksBefore","breaksAfter","newlinesBeforeSelection","newlinesAfterSelection","newlinesToAppend","newlinesToPrepend","arg","originalSelectionEnd","selectedText","hasReplaceNext","ref","startsWith","replacementText","position","Math","max","min","whitespaceEdges","leadingWhitespace","trailingWhitespace","replace","lines","undoStyle","every","line","map","orderedListRegex","noInitialSelection","textToUnstyle","startOfLine","endOfLine","linesBefore","linesToUnstyle","undoStyling","test","lengthDiff","numberedLines","len","results","stylesToApply","defaults","Object","assign"],"mappings":"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","sourcesContent":["const buttonSelectors = [\n    '[data-md-button]',\n    'md-header',\n    'md-bold',\n    'md-italic',\n    'md-quote',\n    'md-code',\n    'md-link',\n    'md-image',\n    'md-unordered-list',\n    'md-ordered-list',\n    'md-task-list',\n    'md-mention',\n    'md-ref',\n    'md-strikethrough'\n];\nfunction getButtons(toolbar) {\n    const els = [];\n    for (const button of toolbar.querySelectorAll(buttonSelectors.join(', '))) {\n        if (button.hidden || (button.offsetWidth <= 0 && button.offsetHeight <= 0))\n            continue;\n        if (button.closest('markdown-toolbar') === toolbar)\n            els.push(button);\n    }\n    return els;\n}\nfunction keydown(fn) {\n    return function (event) {\n        if (event.key === ' ' || event.key === 'Enter') {\n            event.preventDefault();\n            fn(event);\n        }\n    };\n}\nconst styles = new WeakMap();\nclass MarkdownButtonElement extends HTMLElement {\n    constructor() {\n        super();\n        const apply = () => {\n            const style = styles.get(this);\n            if (!style)\n                return;\n            applyStyle(this, style);\n        };\n        this.addEventListener('keydown', keydown(apply));\n        this.addEventListener('click', apply);\n    }\n    connectedCallback() {\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'button');\n        }\n    }\n    click() {\n        const style = styles.get(this);\n        if (!style)\n            return;\n        applyStyle(this, style);\n    }\n}\nclass MarkdownHeaderButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        const level = parseInt(this.getAttribute('level') || '3', 10);\n        if (level < 1 || level > 6) {\n            return;\n        }\n        const prefix = `${'#'.repeat(level)} `;\n        styles.set(this, {\n            prefix\n        });\n    }\n}\nif (!window.customElements.get('md-header')) {\n    window.MarkdownHeaderButtonElement = MarkdownHeaderButtonElement;\n    window.customElements.define('md-header', MarkdownHeaderButtonElement);\n}\nclass MarkdownBoldButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '**', suffix: '**', trimFirst: true });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('hotkey', 'b');\n    }\n}\nif (!window.customElements.get('md-bold')) {\n    window.MarkdownBoldButtonElement = MarkdownBoldButtonElement;\n    window.customElements.define('md-bold', MarkdownBoldButtonElement);\n}\nclass MarkdownItalicButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '_', suffix: '_', trimFirst: true });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('hotkey', 'i');\n    }\n}\nif (!window.customElements.get('md-italic')) {\n    window.MarkdownItalicButtonElement = MarkdownItalicButtonElement;\n    window.customElements.define('md-italic', MarkdownItalicButtonElement);\n}\nclass MarkdownQuoteButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '> ', multiline: true, surroundWithNewlines: true });\n    }\n}\nif (!window.customElements.get('md-quote')) {\n    window.MarkdownQuoteButtonElement = MarkdownQuoteButtonElement;\n    window.customElements.define('md-quote', MarkdownQuoteButtonElement);\n}\nclass MarkdownCodeButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '`', suffix: '`', blockPrefix: '```', blockSuffix: '```' });\n    }\n}\nif (!window.customElements.get('md-code')) {\n    window.MarkdownCodeButtonElement = MarkdownCodeButtonElement;\n    window.customElements.define('md-code', MarkdownCodeButtonElement);\n}\nclass MarkdownLinkButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '[', suffix: '](url)', replaceNext: 'url', scanFor: 'https?://' });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('hotkey', 'k');\n    }\n}\nif (!window.customElements.get('md-link')) {\n    window.MarkdownLinkButtonElement = MarkdownLinkButtonElement;\n    window.customElements.define('md-link', MarkdownLinkButtonElement);\n}\nclass MarkdownImageButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '![', suffix: '](url)', replaceNext: 'url', scanFor: 'https?://' });\n    }\n}\nif (!window.customElements.get('md-image')) {\n    window.MarkdownImageButtonElement = MarkdownImageButtonElement;\n    window.customElements.define('md-image', MarkdownImageButtonElement);\n}\nclass MarkdownUnorderedListButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '- ', multiline: true, surroundWithNewlines: true });\n    }\n}\nif (!window.customElements.get('md-unordered-list')) {\n    window.MarkdownUnorderedListButtonElement = MarkdownUnorderedListButtonElement;\n    window.customElements.define('md-unordered-list', MarkdownUnorderedListButtonElement);\n}\nclass MarkdownOrderedListButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '1. ', multiline: true, orderedList: true });\n    }\n}\nif (!window.customElements.get('md-ordered-list')) {\n    window.MarkdownOrderedListButtonElement = MarkdownOrderedListButtonElement;\n    window.customElements.define('md-ordered-list', MarkdownOrderedListButtonElement);\n}\nclass MarkdownTaskListButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '- [ ] ', multiline: true, surroundWithNewlines: true });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('hotkey', 'L');\n    }\n}\nif (!window.customElements.get('md-task-list')) {\n    window.MarkdownTaskListButtonElement = MarkdownTaskListButtonElement;\n    window.customElements.define('md-task-list', MarkdownTaskListButtonElement);\n}\nclass MarkdownMentionButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '@', prefixSpace: true });\n    }\n}\nif (!window.customElements.get('md-mention')) {\n    window.MarkdownMentionButtonElement = MarkdownMentionButtonElement;\n    window.customElements.define('md-mention', MarkdownMentionButtonElement);\n}\nclass MarkdownRefButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '#', prefixSpace: true });\n    }\n}\nif (!window.customElements.get('md-ref')) {\n    window.MarkdownRefButtonElement = MarkdownRefButtonElement;\n    window.customElements.define('md-ref', MarkdownRefButtonElement);\n}\nclass MarkdownStrikethroughButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '~~', suffix: '~~', trimFirst: true });\n    }\n}\nif (!window.customElements.get('md-strikethrough')) {\n    window.MarkdownStrikethroughButtonElement = MarkdownStrikethroughButtonElement;\n    window.customElements.define('md-strikethrough', MarkdownStrikethroughButtonElement);\n}\nconst modifierKey = navigator.userAgent.match(/Macintosh/) ? 'Meta' : 'Control';\nclass MarkdownToolbarElement extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'toolbar');\n        }\n        this.addEventListener('keydown', focusKeydown);\n        const fn = shortcut.bind(null, this);\n        if (this.field) {\n            this.field.addEventListener('keydown', fn);\n            shortcutListeners.set(this, fn);\n        }\n        this.setAttribute('tabindex', '0');\n        this.addEventListener('focus', onToolbarFocus, { once: true });\n    }\n    disconnectedCallback() {\n        const fn = shortcutListeners.get(this);\n        if (fn && this.field) {\n            this.field.removeEventListener('keydown', fn);\n            shortcutListeners.delete(this);\n        }\n        this.removeEventListener('keydown', focusKeydown);\n    }\n    get field() {\n        const id = this.getAttribute('for');\n        if (!id)\n            return null;\n        const root = 'getRootNode' in this ? this.getRootNode() : document;\n        let field;\n        if (root instanceof Document || root instanceof ShadowRoot) {\n            field = root.getElementById(id);\n        }\n        return field instanceof HTMLTextAreaElement ? field : null;\n    }\n}\nfunction onToolbarFocus({ target }) {\n    if (!(target instanceof Element))\n        return;\n    target.removeAttribute('tabindex');\n    let tabindex = '0';\n    for (const button of getButtons(target)) {\n        button.setAttribute('tabindex', tabindex);\n        if (tabindex === '0') {\n            button.focus();\n            tabindex = '-1';\n        }\n    }\n}\nfunction focusKeydown(event) {\n    const key = event.key;\n    if (key !== 'ArrowRight' && key !== 'ArrowLeft' && key !== 'Home' && key !== 'End')\n        return;\n    const toolbar = event.currentTarget;\n    if (!(toolbar instanceof HTMLElement))\n        return;\n    const buttons = getButtons(toolbar);\n    const index = buttons.indexOf(event.target);\n    const length = buttons.length;\n    if (index === -1)\n        return;\n    let n = 0;\n    if (key === 'ArrowLeft')\n        n = index - 1;\n    if (key === 'ArrowRight')\n        n = index + 1;\n    if (key === 'End')\n        n = length - 1;\n    if (n < 0)\n        n = length - 1;\n    if (n > length - 1)\n        n = 0;\n    for (let i = 0; i < length; i += 1) {\n        buttons[i].setAttribute('tabindex', i === n ? '0' : '-1');\n    }\n    event.preventDefault();\n    buttons[n].focus();\n}\nconst shortcutListeners = new WeakMap();\nfunction findHotkey(toolbar, key) {\n    for (const el of toolbar.querySelectorAll('[hotkey]')) {\n        if (el.getAttribute('hotkey') === key) {\n            return el;\n        }\n    }\n    return null;\n}\nfunction shortcut(toolbar, event) {\n    if ((event.metaKey && modifierKey === 'Meta') || (event.ctrlKey && modifierKey === 'Control')) {\n        const button = findHotkey(toolbar, event.key);\n        if (button) {\n            button.click();\n            event.preventDefault();\n        }\n    }\n}\nif (!window.customElements.get('markdown-toolbar')) {\n    window.MarkdownToolbarElement = MarkdownToolbarElement;\n    window.customElements.define('markdown-toolbar', MarkdownToolbarElement);\n}\nfunction isMultipleLines(string) {\n    return string.trim().split('\\n').length > 1;\n}\nfunction repeat(string, n) {\n    return Array(n + 1).join(string);\n}\nfunction wordSelectionStart(text, i) {\n    let index = i;\n    while (text[index] && text[index - 1] != null && !text[index - 1].match(/\\s/)) {\n        index--;\n    }\n    return index;\n}\nfunction wordSelectionEnd(text, i, multiline) {\n    let index = i;\n    const breakpoint = multiline ? /\\n/ : /\\s/;\n    while (text[index] && !text[index].match(breakpoint)) {\n        index++;\n    }\n    return index;\n}\nlet canInsertText = null;\nfunction insertText(textarea, { text, selectionStart, selectionEnd }) {\n    const originalSelectionStart = textarea.selectionStart;\n    const before = textarea.value.slice(0, originalSelectionStart);\n    const after = textarea.value.slice(textarea.selectionEnd);\n    if (canInsertText === null || canInsertText === true) {\n        textarea.contentEditable = 'true';\n        try {\n            canInsertText = document.execCommand('insertText', false, text);\n        }\n        catch (error) {\n            canInsertText = false;\n        }\n        textarea.contentEditable = 'false';\n    }\n    if (canInsertText && !textarea.value.slice(0, textarea.selectionStart).endsWith(text)) {\n        canInsertText = false;\n    }\n    if (!canInsertText) {\n        try {\n            document.execCommand('ms-beginUndoUnit');\n        }\n        catch (e) {\n        }\n        textarea.value = before + text + after;\n        try {\n            document.execCommand('ms-endUndoUnit');\n        }\n        catch (e) {\n        }\n        textarea.dispatchEvent(new CustomEvent('input', { bubbles: true, cancelable: true }));\n    }\n    if (selectionStart != null && selectionEnd != null) {\n        textarea.setSelectionRange(selectionStart, selectionEnd);\n    }\n    else {\n        textarea.setSelectionRange(originalSelectionStart, textarea.selectionEnd);\n    }\n}\nfunction styleSelectedText(textarea, styleArgs) {\n    const text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let result;\n    if (styleArgs.orderedList) {\n        result = orderedList(textarea);\n    }\n    else if (styleArgs.multiline && isMultipleLines(text)) {\n        result = multilineStyle(textarea, styleArgs);\n    }\n    else {\n        result = blockStyle(textarea, styleArgs);\n    }\n    insertText(textarea, result);\n}\nfunction expandSelectedText(textarea, prefixToUse, suffixToUse, multiline = false) {\n    if (textarea.selectionStart === textarea.selectionEnd) {\n        textarea.selectionStart = wordSelectionStart(textarea.value, textarea.selectionStart);\n        textarea.selectionEnd = wordSelectionEnd(textarea.value, textarea.selectionEnd, multiline);\n    }\n    else {\n        const expandedSelectionStart = textarea.selectionStart - prefixToUse.length;\n        const expandedSelectionEnd = textarea.selectionEnd + suffixToUse.length;\n        const beginsWithPrefix = textarea.value.slice(expandedSelectionStart, textarea.selectionStart) === prefixToUse;\n        const endsWithSuffix = textarea.value.slice(textarea.selectionEnd, expandedSelectionEnd) === suffixToUse;\n        if (beginsWithPrefix && endsWithSuffix) {\n            textarea.selectionStart = expandedSelectionStart;\n            textarea.selectionEnd = expandedSelectionEnd;\n        }\n    }\n    return textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n}\nfunction newlinesToSurroundSelectedText(textarea) {\n    const beforeSelection = textarea.value.slice(0, textarea.selectionStart);\n    const afterSelection = textarea.value.slice(textarea.selectionEnd);\n    const breaksBefore = beforeSelection.match(/\\n*$/);\n    const breaksAfter = afterSelection.match(/^\\n*/);\n    const newlinesBeforeSelection = breaksBefore ? breaksBefore[0].length : 0;\n    const newlinesAfterSelection = breaksAfter ? breaksAfter[0].length : 0;\n    let newlinesToAppend;\n    let newlinesToPrepend;\n    if (beforeSelection.match(/\\S/) && newlinesBeforeSelection < 2) {\n        newlinesToAppend = repeat('\\n', 2 - newlinesBeforeSelection);\n    }\n    if (afterSelection.match(/\\S/) && newlinesAfterSelection < 2) {\n        newlinesToPrepend = repeat('\\n', 2 - newlinesAfterSelection);\n    }\n    if (newlinesToAppend == null) {\n        newlinesToAppend = '';\n    }\n    if (newlinesToPrepend == null) {\n        newlinesToPrepend = '';\n    }\n    return { newlinesToAppend, newlinesToPrepend };\n}\nfunction blockStyle(textarea, arg) {\n    let newlinesToAppend;\n    let newlinesToPrepend;\n    const { prefix, suffix, blockPrefix, blockSuffix, replaceNext, prefixSpace, scanFor, surroundWithNewlines } = arg;\n    const originalSelectionStart = textarea.selectionStart;\n    const originalSelectionEnd = textarea.selectionEnd;\n    let selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let prefixToUse = isMultipleLines(selectedText) && blockPrefix.length > 0 ? `${blockPrefix}\\n` : prefix;\n    let suffixToUse = isMultipleLines(selectedText) && blockSuffix.length > 0 ? `\\n${blockSuffix}` : suffix;\n    if (prefixSpace) {\n        const beforeSelection = textarea.value[textarea.selectionStart - 1];\n        if (textarea.selectionStart !== 0 && beforeSelection != null && !beforeSelection.match(/\\s/)) {\n            prefixToUse = ` ${prefixToUse}`;\n        }\n    }\n    selectedText = expandSelectedText(textarea, prefixToUse, suffixToUse, arg.multiline);\n    let selectionStart = textarea.selectionStart;\n    let selectionEnd = textarea.selectionEnd;\n    const hasReplaceNext = replaceNext.length > 0 && suffixToUse.indexOf(replaceNext) > -1 && selectedText.length > 0;\n    if (surroundWithNewlines) {\n        const ref = newlinesToSurroundSelectedText(textarea);\n        newlinesToAppend = ref.newlinesToAppend;\n        newlinesToPrepend = ref.newlinesToPrepend;\n        prefixToUse = newlinesToAppend + prefix;\n        suffixToUse += newlinesToPrepend;\n    }\n    if (selectedText.startsWith(prefixToUse) && selectedText.endsWith(suffixToUse)) {\n        const replacementText = selectedText.slice(prefixToUse.length, selectedText.length - suffixToUse.length);\n        if (originalSelectionStart === originalSelectionEnd) {\n            let position = originalSelectionStart - prefixToUse.length;\n            position = Math.max(position, selectionStart);\n            position = Math.min(position, selectionStart + replacementText.length);\n            selectionStart = selectionEnd = position;\n        }\n        else {\n            selectionEnd = selectionStart + replacementText.length;\n        }\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n    else if (!hasReplaceNext) {\n        let replacementText = prefixToUse + selectedText + suffixToUse;\n        selectionStart = originalSelectionStart + prefixToUse.length;\n        selectionEnd = originalSelectionEnd + prefixToUse.length;\n        const whitespaceEdges = selectedText.match(/^\\s*|\\s*$/g);\n        if (arg.trimFirst && whitespaceEdges) {\n            const leadingWhitespace = whitespaceEdges[0] || '';\n            const trailingWhitespace = whitespaceEdges[1] || '';\n            replacementText = leadingWhitespace + prefixToUse + selectedText.trim() + suffixToUse + trailingWhitespace;\n            selectionStart += leadingWhitespace.length;\n            selectionEnd -= trailingWhitespace.length;\n        }\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n    else if (scanFor.length > 0 && selectedText.match(scanFor)) {\n        suffixToUse = suffixToUse.replace(replaceNext, selectedText);\n        const replacementText = prefixToUse + suffixToUse;\n        selectionStart = selectionEnd = selectionStart + prefixToUse.length;\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n    else {\n        const replacementText = prefixToUse + selectedText + suffixToUse;\n        selectionStart = selectionStart + prefixToUse.length + selectedText.length + suffixToUse.indexOf(replaceNext);\n        selectionEnd = selectionStart + replaceNext.length;\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n}\nfunction multilineStyle(textarea, arg) {\n    const { prefix, suffix, surroundWithNewlines } = arg;\n    let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let selectionStart = textarea.selectionStart;\n    let selectionEnd = textarea.selectionEnd;\n    const lines = text.split('\\n');\n    const undoStyle = lines.every(line => line.startsWith(prefix) && line.endsWith(suffix));\n    if (undoStyle) {\n        text = lines.map(line => line.slice(prefix.length, line.length - suffix.length)).join('\\n');\n        selectionEnd = selectionStart + text.length;\n    }\n    else {\n        text = lines.map(line => prefix + line + suffix).join('\\n');\n        if (surroundWithNewlines) {\n            const { newlinesToAppend, newlinesToPrepend } = newlinesToSurroundSelectedText(textarea);\n            selectionStart += newlinesToAppend.length;\n            selectionEnd = selectionStart + text.length;\n            text = newlinesToAppend + text + newlinesToPrepend;\n        }\n    }\n    return { text, selectionStart, selectionEnd };\n}\nfunction orderedList(textarea) {\n    const orderedListRegex = /^\\d+\\.\\s+/;\n    const noInitialSelection = textarea.selectionStart === textarea.selectionEnd;\n    let selectionEnd;\n    let selectionStart;\n    let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let textToUnstyle = text;\n    let lines = text.split('\\n');\n    let startOfLine, endOfLine;\n    if (noInitialSelection) {\n        const linesBefore = textarea.value.slice(0, textarea.selectionStart).split(/\\n/);\n        startOfLine = textarea.selectionStart - linesBefore[linesBefore.length - 1].length;\n        endOfLine = wordSelectionEnd(textarea.value, textarea.selectionStart, true);\n        textToUnstyle = textarea.value.slice(startOfLine, endOfLine);\n    }\n    const linesToUnstyle = textToUnstyle.split('\\n');\n    const undoStyling = linesToUnstyle.every(line => orderedListRegex.test(line));\n    if (undoStyling) {\n        lines = linesToUnstyle.map(line => line.replace(orderedListRegex, ''));\n        text = lines.join('\\n');\n        if (noInitialSelection && startOfLine && endOfLine) {\n            const lengthDiff = linesToUnstyle[0].length - lines[0].length;\n            selectionStart = selectionEnd = textarea.selectionStart - lengthDiff;\n            textarea.selectionStart = startOfLine;\n            textarea.selectionEnd = endOfLine;\n        }\n    }\n    else {\n        lines = numberedLines(lines);\n        text = lines.join('\\n');\n        const { newlinesToAppend, newlinesToPrepend } = newlinesToSurroundSelectedText(textarea);\n        selectionStart = textarea.selectionStart + newlinesToAppend.length;\n        selectionEnd = selectionStart + text.length;\n        if (noInitialSelection)\n            selectionStart = selectionEnd;\n        text = newlinesToAppend + text + newlinesToPrepend;\n    }\n    return { text, selectionStart, selectionEnd };\n}\nfunction numberedLines(lines) {\n    let i;\n    let len;\n    let index;\n    const results = [];\n    for (index = i = 0, len = lines.length; i < len; index = ++i) {\n        const line = lines[index];\n        results.push(`${index + 1}. ${line}`);\n    }\n    return results;\n}\nfunction applyStyle(button, stylesToApply) {\n    const toolbar = button.closest('markdown-toolbar');\n    if (!(toolbar instanceof MarkdownToolbarElement))\n        return;\n    const defaults = {\n        prefix: '',\n        suffix: '',\n        blockPrefix: '',\n        blockSuffix: '',\n        multiline: false,\n        replaceNext: '',\n        prefixSpace: false,\n        scanFor: '',\n        surroundWithNewlines: false,\n        orderedList: false,\n        trimFirst: false\n    };\n    const style = Object.assign(Object.assign({}, defaults), stylesToApply);\n    const field = toolbar.field;\n    if (field) {\n        field.focus();\n        styleSelectedText(field, style);\n    }\n}\nexport default MarkdownToolbarElement;\n"]},"metadata":{},"sourceType":"module"}